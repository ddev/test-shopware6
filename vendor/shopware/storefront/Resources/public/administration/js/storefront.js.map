{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/sw-theme-list-item.scss","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/component/sw-settings-storefront-configuration/sw-settings-storefront-configuration.scss","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/mixin/sw-theme.mixin.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/sw-theme-manager-list.scss","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/sw-theme-modal.scss","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/sw-sales-channel-detail-theme.scss","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/sw-theme-manager-detail.scss","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/acl/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/sw-theme-manager-detail.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/sw-theme-manager-list.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/sw-theme-list-item.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/sw-theme-modal.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-theme-manager/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/page/sw-settings-storefront-index/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/page/sw-settings-storefront-index/sw-settings-storefront-index.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/component/sw-settings-storefront-configuration/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/component/sw-settings-storefront-configuration/sw-settings-storefront-configuration.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/extension/sw-sales-channel/page/sw-sales-channel-detail/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/extension/sw-sales-channel/page/sw-sales-channel-detail/sw-sales-channel-detail.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/sw-sales-channel-detail-theme.html.twig","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/index.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/core/service/api/theme.api.service.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/init/api-service.init.js","webpack:////builds/shopware/6/product/platform/src/Storefront/Resources/app/administration/src/modules/sw-settings-storefront/page/sw-settings-storefront-index/sw-settings-storefront-index.scss"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","default","locals","add","Shopware","Mixin","register","inject","data","showDeleteModal","showMediaModal","showRenameModal","showDuplicateModal","newThemeName","modalTheme","computed","themeRepository","this","repositoryFactory","methods","onDeleteTheme","theme","acl","can","onCloseDeleteModal","onConfirmThemeDelete","deleteTheme","_this","titleDeleteError","$tc","messageDeleteError","isLoading","delete","id","Context","api","then","getList","$router","push","catch","createNotificationError","title","message","onDuplicateTheme","onCloseDuplicateModal","onConfirmThemeDuplicate","duplicateTheme","parentTheme","_this2","themeDuplicate","parentThemeId","author","description","labels","helpTexts","customFields","baseConfig","configValues","previewMediaId","active","save","params","onRenameTheme","onCloseRenameModal","onConfirmThemeRename","RenameTheme","listToStyles","parentId","list","styles","newStyles","length","item","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","Service","addPrivilegeMappingEntry","category","parent","roles","viewer","privileges","getPrivileges","dependencies","editor","creator","deleter","_Shopware","Component","Criteria","Data","_Shopware$Utils$objec","Utils","getObjectDiff","cloneDeep","isArray","types","template","mixins","getByName","filters","cssValue","toString","replace","defaultMediaFolderId","structuredThemeFields","themeConfig","currentThemeConfig","showResetModal","showSaveModal","errorModalMessage","baseThemeConfig","currentThemeConfigInitial","inheritanceChanged","isSaveSuccessful","mappedFields","color","fontFamily","defaultTheme","themeCompatibleSalesChannels","salesChannelsWithTheme","newAssignedSalesChannels","overwrittenSalesChannelAssignments","removedSalesChannels","metaInfo","$createTitle","themeName","isDerived","_this$theme","_this$theme$baseConfi","technicalName","configInheritance","includes","mediaRepository","defaultFolderRepository","salesChannelRepository","previewMedia","url","concat","defaultThemeAsset","previewUrl","Filter","assetFilter","deleteDisabledToolTip","showDelay","disabled","salesChannels","themeId","$route","shouldShowContent","values","hasMoreThanOneTab","tabs","isDefaultTheme","created","createdComponent","watch","getTheme","setPageContext","criteria","addAssociation","response","getThemeConfig","getParentTheme","checkInheritanceFunction","fieldName","isInherited","handleInheritanceInput","_this3","themeService","getStructuredFields","fields","getConfiguration","config","currentFields","baseThemeFields","_this4","getDefaultTheme","getDefaultFolderId","folderId","getThemeCompatibleSalesChannels","ids","getSalesChannelsWithTheme","_this5","openMediaSidebar","$refs","mediaSidebarItem","openContent","onAddMediaToTheme","mediaItem","context","setMediaItem","onDropMedia","dragData","successfulUpload","_this6","targetId","removeMediaItem","field","updateCurrentValue","removeInheritance","restoreMediaInheritance","currentValue","onReset","onCloseResetModal","onCloseErrorModal","onConfirmThemeReset","_this7","resetTheme","onSave","findChangedSalesChannels","onSaveTheme","onSaveClean","onCloseSaveModal","onConfirmThemeSave","_this8","clean","arguments","undefined","Promise","all","saveSalesChannels","saveThemeConfig","finally","error","errorObject","errors","code","autoClose","actions","label","method","detail","_this9","promises","forEach","salesChannelId","assignTheme","salesChannel","diff","getSyncChangeset","changeset","changes","findAddedSalesChannels","deletions","findRemovedSalesChannels","_this10","overwrittenSalesChannel","salesChannelName","translated","oldThemeName","extensions","themes","_this11","getOrigin","getCurrentChangeset","_this$theme$configVal","newValues","allValues","assign","filtered","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","removeInheritedFromChangeset","_i2","_Object$keys","keys","wrapperIsVisible","_this12","updateTheme","saveFinish","onSearch","term","onChangeTab","_i3","_Object$entries2","_Object$entries2$_i","startsWith","mapSwFieldTypes","addFilter","equalsAny","search","searchResult","getIds","not","equals","schema","entity","defaultFolder","first","folder","getBind","_config$custom","_config$custom2","_config$custom3","_config$custom4","custom","componentName","selectionDisablingMethod","selection","has","isThemeCompatible","total","disableRouteParams","listMode","sortBy","sortDirection","limit","identifier","languageRepository","columnConfig","getColumnConfig","sortOptions","sortingConCat","lockToolTip","dateFilter","onRefresh","page","addSorting","sort","setTerm","pages","resetList","updateRoute","onChangeLanguage","languageId","onListItemClick","onSortingChanged","_value$split2","split","onPageChange","_ref","onListModeChange","onPreviewChange","currentTheme","onPreviewImageRemove","saveTheme","onModalClose","onPreviewImageChange","_ref2","image","primary","sortable","Application","props","required","componentClasses","isActive","onChangePreviewImage","$emit","onThemeClick","onRemovePreviewImage","onDelete","emitItemClick","selected","selectLayout","closeModal","selectItem","onSelection","Module","version","targetVersion","icon","favicon","routes","component","path","meta","privilege","parentPath","navigation","position","routeMiddleware","next","currentRoute","children","every","child","isChildren","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","apply","storefrontSettings","_callee","_context","loadPageContent","_callee2","_context2","loadstorefrontSettings","_callee3","_context3","systemConfigApiService","getValues","savestorefrontSettings","_callee4","_context4","saveValues","onSaveFinish","_callee5","_context5","settingsItem","group","to","override","getLoadSalesChannelCriteria","$super","showThemeSelectionModal","showChangeModal","newThemeId","deep","handler","openThemeModal","closeThemeModal","openInThemeManager","onChangeTheme","onCloseChangeModal","onConfirmChange","onThemeSelect","selectedThemeId","ApiService","Classes","ThemeApiService","_ApiService","_inherits","_super","_createSuper","httpClient","loginService","apiEndpoint","_classCallCheck","additionalParams","additionalHeaders","apiRoute","getApiBasePath","post","_objectSpread","headers","getBasicHeaders","handleResponse","patch","State","container","initContainer","getContainer","ThemeService"],"mappings":"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","file":"static/js/storefront.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/storefront/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"iOrj\");\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-theme-list-item.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"92563db8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-storefront-configuration.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"82a1b004\", content, true, {});","/**\n * @package sales-channel\n */\n\nconst { Mixin } = Shopware;\n\nMixin.register('theme', {\n    inject: [\n        'repositoryFactory',\n        'themeService',\n        'acl'\n    ],\n\n    data() {\n        return {\n            showDeleteModal: false,\n            showMediaModal: false,\n            showRenameModal: false,\n            showDuplicateModal: false,\n            newThemeName: '',\n            modalTheme: null\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    methods: {\n        onDeleteTheme(theme) {\n            if (!this.acl.can('theme.deleter')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.showDeleteModal = true;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n            this.modalTheme = null;\n        },\n\n        onConfirmThemeDelete() {\n            this.deleteTheme(this.modalTheme);\n\n            this.showDeleteModal = false;\n            this.modalTheme = null;\n        },\n\n        deleteTheme(theme) {\n            const titleDeleteError = this.$tc('sw-theme-manager.components.themeListItem.notificationDeleteErrorTitle');\n            const messageDeleteError = this.$tc('sw-theme-manager.components.themeListItem.notificationDeleteErrorMessage');\n\n            this.isLoading = true;\n            this.themeRepository.delete(theme.id, Shopware.Context.api).then(() => {\n                if (this.getList) {\n                    this.getList();\n                    return;\n                }\n\n                this.$router.push({ name: 'sw.theme.manager.index' });\n            }).catch(() => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    title: titleDeleteError,\n                    message: messageDeleteError\n                });\n            });\n        },\n\n        onDuplicateTheme(theme) {\n            if (!this.acl.can('theme.creator')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.showDuplicateModal = true;\n        },\n\n        onCloseDuplicateModal() {\n            this.showDuplicateModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        onConfirmThemeDuplicate() {\n            this.duplicateTheme(this.modalTheme, this.newThemeName);\n\n            this.showDuplicateModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        duplicateTheme(parentTheme, name) {\n            const themeDuplicate = this.themeRepository.create(Shopware.Context.api);\n\n            themeDuplicate.name = name;\n            themeDuplicate.parentThemeId = parentTheme.id;\n            themeDuplicate.author = parentTheme.author;\n            themeDuplicate.description = parentTheme.description;\n            themeDuplicate.labels = parentTheme.labels;\n            themeDuplicate.helpTexts = parentTheme.helpTexts;\n            themeDuplicate.customFields = parentTheme.customFields;\n            themeDuplicate.baseConfig = null;\n            themeDuplicate.configValues = null;\n            themeDuplicate.previewMediaId = parentTheme.previewMediaId;\n            themeDuplicate.active = true;\n\n            this.themeRepository.save(themeDuplicate, Shopware.Context.api).then(() => {\n                this.$router.push({ name: 'sw.theme.manager.detail', params: { id: themeDuplicate.id } });\n            });\n        },\n\n        onRenameTheme(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.newThemeName = this.modalTheme.name;\n            this.showRenameModal = true;\n        },\n\n        onCloseRenameModal() {\n            this.showRenameModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        onConfirmThemeRename() {\n            this.RenameTheme(this.modalTheme, this.newThemeName);\n\n            this.showRenameModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        RenameTheme(theme, name) {\n            if (name) {\n                theme.name = name;\n            }\n\n            this.themeRepository.save(theme, Shopware.Context.api);\n        }\n    }\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-theme-manager-list.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2b76e2ae\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-theme-modal.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"045726ce\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-sales-channel-detail-theme.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"72e31943\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-theme-manager-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2d1819bb\", content, true, {});","/**\n * @package sales-channel\n */\n\nShopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'content',\n        key: 'theme',\n        roles: {\n            viewer: {\n                privileges: [\n                    'theme:read',\n                    'theme_child:read',\n                    'sales_channel:read',\n                    Shopware.Service('privileges').getPrivileges('media.viewer')\n                ],\n                dependencies: []\n            },\n            editor: {\n                privileges: [\n                    'theme:update',\n                    'theme_child:update',\n                    'tag:read',\n                    'product_media:read',\n                    'product:read',\n                    'category:read',\n                    'product_manufacturer:read',\n                    'mail_template_media:read',\n                    'mail_template:read',\n                    'document_base_config:read',\n                    'user:read',\n                    'payment_method:read',\n                    'shipping_method:read',\n                    'custom_field_set:read',\n                    'custom_field:read',\n                    'custom_field_set_relation:read',\n                    Shopware.Service('privileges').getPrivileges('media.creator')\n                ],\n                dependencies: [\n                    'theme.viewer'\n                ]\n            },\n            creator: {\n                privileges: [\n                    'theme:create',\n                    'theme_child:create'\n                ],\n                dependencies: [\n                    'theme.viewer',\n                    'theme.editor'\n                ]\n            },\n            deleter: {\n                privileges: [\n                    'theme:delete',\n                    'theme_child:delete'\n                ],\n                dependencies: [\n                    'theme.viewer'\n                ]\n            }\n        }\n    });\n","import template from './sw-theme-manager-detail.html.twig';\nimport './sw-theme-manager-detail.scss';\n\n/**\n * @package sales-channel\n */\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { getObjectDiff, cloneDeep } = Shopware.Utils.object;\nconst { isArray } = Shopware.Utils.types;\n\nComponent.register('sw-theme-manager-detail', {\n    template,\n\n    inject: ['acl', 'feature'],\n\n    mixins: [\n        Mixin.getByName('theme'),\n        Mixin.getByName('notification')\n    ],\n\n    filters: {\n        cssValue: function (value) {\n            // Be careful what to filter here because many characters are allowed\n            if (!value) return ''\n            value = value.toString()\n            return value.replace(/`|´/g, '');\n        }\n    },\n\n    data() {\n        return {\n            theme: null,\n            parentTheme: false,\n            defaultMediaFolderId: null,\n            structuredThemeFields: {},\n            themeConfig: {},\n            currentThemeConfig: {},\n            showResetModal: false,\n            showSaveModal: false,\n            errorModalMessage: null,\n            baseThemeConfig: {},\n            currentThemeConfigInitial: {},\n            inheritanceChanged: [],\n            isLoading: false,\n            isSaveSuccessful: false,\n            mappedFields: {\n                color: 'colorpicker',\n                fontFamily: 'text'\n            },\n            defaultTheme: null,\n            themeCompatibleSalesChannels: [],\n            salesChannelsWithTheme: null,\n            newAssignedSalesChannels: [],\n            overwrittenSalesChannelAssignments: [],\n            removedSalesChannels: []\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.themeName)\n        };\n    },\n\n    computed: {\n        themeName() {\n            if (this.theme) {\n                return this.theme.name;\n            }\n\n            return '';\n        },\n\n        isDerived() {\n            if (!this.theme) {\n                return false;\n            }\n            if (this.theme.technicalName === 'Storefront') {\n                return false;\n            }\n            if (this.parentTheme) {\n                return true;\n            }\n            if (\n                isArray(this.theme?.baseConfig?.configInheritance) &&\n                !this.theme.baseConfig.configInheritance.includes('@Storefront')\n            ) {\n                return false;\n            }\n            return true;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        previewMedia() {\n            if (this.theme && this.theme.previewMedia && this.theme.previewMedia.id && this.theme.previewMedia.url) {\n                return {\n                    'background-image': `url('${this.theme.previewMedia.url}')`,\n                    'background-size': 'cover'\n                };\n            }\n\n            return {\n                'background-image': this.defaultThemeAsset\n            };\n        },\n\n        defaultThemeAsset() {\n            const assetFilter = Shopware.Filter.getByName('asset');\n            const previewUrl = assetFilter('administration/static/img/theme/default_theme_preview.jpg');\n\n            return `url(${previewUrl})`;\n        },\n\n        deleteDisabledToolTip() {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-theme-manager.actions.deleteDisabledToolTip'),\n                disabled: this.theme.salesChannels.length === 0\n            };\n        },\n\n        themeId() {\n            return this.$route.params.id;\n        },\n\n        shouldShowContent() {\n            return Object.values(this.structuredThemeFields).length > 0 && !this.isLoading;\n        },\n\n        hasMoreThanOneTab() {\n            return Object.values(this.structuredThemeFields.tabs).length > 1;\n        },\n\n        isDefaultTheme() {\n            return this.theme.id === this.defaultTheme.id;\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        themeId() {\n            this.getTheme();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            this.getTheme();\n            this.setPageContext();\n        },\n\n        getTheme() {\n            if (!this.themeId) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            const criteria = new Criteria();\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n\n            this.themeRepository.get(this.themeId, Shopware.Context.api, criteria).then((response) => {\n                this.theme = response;\n                this.getThemeConfig();\n\n                if (this.theme.parentThemeId) {\n                    this.getParentTheme();\n                }\n\n                this.isLoading = false;\n            });\n        },\n\n        checkInheritanceFunction(fieldName) {\n            return () => this.currentThemeConfig[fieldName].isInherited;\n        },\n\n        handleInheritanceInput(value, fieldName) {\n            this.currentThemeConfig[fieldName].isInherited = value === null;\n        },\n\n        getThemeConfig() {\n            this.isLoading = true;\n\n            if (!this.theme || !this.themeId) {\n                return;\n            }\n\n            this.structuredThemeFields = {};\n            this.currentThemeConfig = {};\n            this.themeConfig = {};\n            this.baseThemeConfig = {};\n            this.currentThemeConfigInitial = {};\n\n            this.themeService.getStructuredFields(this.themeId).then((fields) => {\n                this.structuredThemeFields = fields;\n            });\n\n            this.themeService.getConfiguration(this.themeId).then((config) => {\n                this.currentThemeConfig = config.currentFields;\n                this.currentThemeConfigInitial = cloneDeep(this.currentThemeConfig);\n                this.themeConfig = config.fields;\n                this.baseThemeConfig = cloneDeep(config.baseThemeFields);\n                this.isLoading = false;\n            });\n        },\n\n        setPageContext() {\n            this.getDefaultTheme().then((defaultTheme) => {\n                this.defaultTheme = defaultTheme;\n            });\n\n            this.getDefaultFolderId().then((folderId) => {\n                this.defaultMediaFolderId = folderId;\n            });\n\n            this.getThemeCompatibleSalesChannels().then((ids) => {\n                this.themeCompatibleSalesChannels = ids;\n            });\n\n            this.getSalesChannelsWithTheme().then((salesChannels) => {\n                this.salesChannelsWithTheme = salesChannels;\n            });\n        },\n\n        getParentTheme() {\n            this.themeRepository.get(this.theme.parentThemeId).then((parentTheme) => {\n                this.parentTheme = parentTheme;\n            });\n        },\n\n        openMediaSidebar() {\n            this.$refs.mediaSidebarItem.openContent();\n        },\n\n        onAddMediaToTheme(mediaItem, context) {\n            this.setMediaItem(mediaItem, context);\n        },\n\n        onDropMedia(dragData, context) {\n            this.setMediaItem(dragData, context);\n        },\n\n        setMediaItem(mediaItem, context) {\n            context.value = mediaItem.id;\n        },\n\n        successfulUpload(mediaItem, context) {\n            this.mediaRepository\n                .get(mediaItem.targetId)\n                .then((media) => {\n                    this.setMediaItem(media, context);\n                    return true;\n                });\n        },\n\n        removeMediaItem(field, updateCurrentValue, isInherited, removeInheritance) {\n            this.currentThemeConfig[field].value = null;\n            this.themeConfig[field].value = null;\n            if (isInherited) {\n                updateCurrentValue(null);\n            } else {\n                removeInheritance(null);\n            }\n            this.currentThemeConfigInitial[field].value = false;\n        },\n\n        restoreMediaInheritance(currentValue, value) {\n            return currentValue;\n        },\n\n        onReset() {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            if (this.theme.configValues === null) {\n                return;\n            }\n\n            this.showResetModal = true;\n        },\n\n        onCloseResetModal() {\n            this.showResetModal = false;\n        },\n\n        onCloseErrorModal() {\n            this.errorModalMessage = null;\n        },\n\n        onConfirmThemeReset() {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.themeService.resetTheme(this.themeId).then(() => {\n                this.getTheme();\n            });\n\n            this.showResetModal = false;\n        },\n\n        onSave() {\n            this.findChangedSalesChannels();\n\n            if (this.theme.salesChannels.length > 0 || this.removedSalesChannels.length > 0) {\n                this.showSaveModal = true;\n\n                return;\n            }\n\n            return this.onSaveTheme();\n        },\n\n        onSaveClean() {\n            this.findChangedSalesChannels();\n\n            if (this.theme.salesChannels.length > 0 || this.removedSalesChannels.length > 0) {\n                this.showSaveModal = true;\n\n                return;\n            }\n\n            return this.onSaveTheme(true);\n        },\n\n        onCloseSaveModal() {\n            this.showSaveModal = false;\n        },\n\n        onConfirmThemeSave() {\n            this.onSaveTheme();\n            this.showSaveModal = false;\n        },\n\n        onSaveTheme(clean = false) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return Promise.all([this.saveSalesChannels(), this.saveThemeConfig(clean)]).finally(() => {\n                this.getTheme();\n            }).catch((error) => {\n                this.isLoading = false;\n\n                const errorObject = error.response.data.errors[0];\n                if (errorObject.code === 'THEME__COMPILING_ERROR') {\n                    this.createNotificationError({\n                        title: this.$tc('sw-theme-manager.detail.error.themeCompile.title'),\n                        message: this.$tc('sw-theme-manager.detail.error.themeCompile.message'),\n                        autoClose: false,\n                        actions: [{\n                            label: this.$tc('sw-theme-manager.detail.showFullError'),\n                            method: function showFullError() {\n                                this.errorModalMessage = errorObject.detail;\n                            }.bind(this),\n                        }],\n                    });\n\n                    return;\n                }\n\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: error.toString(),\n                    autoClose: true,\n                });\n            });\n        },\n\n        saveSalesChannels() {\n            const promises = [];\n\n            if (this.newAssignedSalesChannels.length > 0) {\n                this.newAssignedSalesChannels.forEach((salesChannelId) => {\n                    promises.push(this.themeService.assignTheme(this.themeId, salesChannelId));\n                });\n            }\n\n            if (this.removedSalesChannels.length > 0) {\n                this.removedSalesChannels.forEach((salesChannel) => {\n                    promises.push(this.themeService.assignTheme(this.defaultTheme.id, salesChannel.id));\n                });\n            }\n\n            return Promise.all(promises);\n        },\n\n        findChangedSalesChannels() {\n            this.newAssignedSalesChannels = [];\n            this.removedSalesChannels = [];\n            this.overwrittenSalesChannelAssignments = [];\n\n            const diff = this.themeRepository.getSyncChangeset([this.theme]);\n\n            if (diff.changeset.length > 0 && diff.changeset[0].changes.hasOwnProperty('salesChannels')) {\n                this.findAddedSalesChannels(diff.changeset[0].changes.salesChannels);\n            }\n\n            if (diff.deletions.length > 0) {\n                this.findRemovedSalesChannels(diff.deletions);\n            }\n        },\n\n        findAddedSalesChannels(salesChannels) {\n            salesChannels.forEach((salesChannel) => {\n                this.newAssignedSalesChannels.push(salesChannel.id);\n\n                const overwrittenSalesChannel = this.salesChannelsWithTheme.get(salesChannel.id);\n                if (overwrittenSalesChannel !== null) {\n                    this.overwrittenSalesChannelAssignments.push({\n                        id: salesChannel.id,\n                        salesChannelName: this.theme.salesChannels.get(salesChannel.id).translated.name,\n                        oldThemeName: overwrittenSalesChannel.extensions.themes[0].name\n                    });\n                }\n            });\n        },\n\n        findRemovedSalesChannels(salesChannels) {\n            salesChannels.forEach((salesChannel) => {\n                this.removedSalesChannels.push({\n                    id: salesChannel.key,\n                    name: this.theme.getOrigin().salesChannels.get(salesChannel.key).translated.name\n                });\n            });\n        },\n\n        getCurrentChangeset(clean = false) {\n            // Get actual changes since load, then merge the changes into the full config set\n            const newValues = getObjectDiff(this.currentThemeConfigInitial, this.currentThemeConfig);\n            const allValues = this.theme.configValues ?? {};\n            Object.assign(allValues, newValues);\n            if (!clean) {\n                return allValues;\n            }\n\n            // Remove unused fields from changeset (defined by not set at all in the themeConfig or the type is not set)\n            const filtered = {};\n            for (const [key, value] of Object.entries(allValues)) {\n                if (\n                    this.themeConfig[key] === undefined\n                    || this.themeConfig[key].type === undefined\n                    || this.themeConfig[key].type === null\n                ) {\n                    continue;\n                }\n                filtered[key] = value;\n            }\n\n            return filtered;\n        },\n\n        removeInheritedFromChangeset(allValues) {\n            for (const key of Object.keys(allValues)) {\n                if (\n                    this.wrapperIsVisible(key)\n                    && this.$refs[`wrapper-${key}`][0].isInherited\n                ) {\n                    // Remove fields which are set to inheritance\n                    delete (allValues[`${key}`]);\n                    continue;\n                }\n                if (\n                    !this.wrapperIsVisible(key)\n                    && this.inheritanceChanged[`wrapper-${key}`] !== undefined\n                    && this.inheritanceChanged[`wrapper-${key}`] === true\n                ) {\n                    delete (allValues[`${key}`]);\n                }\n            }\n        },\n\n        wrapperIsVisible(key) {\n            return this.$refs[`wrapper-${key}`] !== undefined\n            && isArray(this.$refs[`wrapper-${key}`])\n            && this.$refs[`wrapper-${key}`][0] !== undefined;\n        },\n\n        saveThemeConfig(clean = false) {\n            const allValues = this.getCurrentChangeset(clean);\n\n            this.removeInheritedFromChangeset(allValues);\n\n            // Theme has to be reset, because inherited fields needs to be removed from the set\n            return this.themeService.resetTheme(this.themeId).then(() => {\n                return this.themeService.updateTheme(this.themeId, { config: allValues });\n            });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSearch(value = null) {\n            if (!value.length || value.length <= 0) {\n                this.term = null;\n            } else {\n                this.term = value;\n            }\n        },\n\n        onChangeTab() {\n            for (const [key, item] of Object.entries(this.$refs)) {\n                if (\n                    key.startsWith('wrapper-')\n                    && item !== undefined\n                    && isArray(item)\n                    && item[0] !== undefined\n                ) {\n                    this.inheritanceChanged[key] = item[0].isInherited;\n                }\n            }\n        },\n\n        mapSwFieldTypes(field) {\n            return !this.mappedFields[field] ? null : this.mappedFields[field];\n        },\n\n        getThemeCompatibleSalesChannels() {\n            const criteria = new Criteria();\n            criteria.addAssociation('type');\n            criteria.addFilter(Criteria.equalsAny('type.name', ['Storefront', 'Headless']));\n\n            return this.salesChannelRepository.search(criteria).then((searchResult) => {\n                return searchResult.getIds();\n            });\n        },\n\n        getSalesChannelsWithTheme() {\n            const criteria = new Criteria();\n            criteria.addAssociation('themes');\n            criteria.addFilter(Criteria.not('or', [\n                Criteria.equals('themes.id', null),\n            ]));\n\n            return this.salesChannelRepository.search(criteria).then((searchResult) => {\n                return searchResult;\n            });\n        },\n\n        getDefaultFolderId() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', this.themeRepository.schema.entity));\n\n            return this.defaultFolderRepository.search(criteria).then((searchResult) => {\n                const defaultFolder = searchResult.first();\n                if (defaultFolder.folder.id) {\n                    return defaultFolder.folder.id;\n                }\n\n                return null;\n            });\n        },\n\n        getDefaultTheme() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('technicalName', 'Storefront'));\n\n            return this.themeRepository.search(criteria).then((response) => {\n               return response.first();\n            });\n        },\n\n        /**\n         *  Convert the field to the right structure for the form field renderer:\n         *  bind: {\n         *      type: field.type,\n         *      config: anything else from field, including field.custom\n         *  }\n         */\n        getBind(field) {\n            const config = Object.assign({}, field);\n\n            if (config?.type !== 'switch' &&\n                config?.type !== 'checkbox' &&\n                config.custom?.componentName !== 'sw-switch-field' &&\n                config.custom?.componentName !== 'sw-checkbox-field'\n            ) {\n                config.label = '';\n            }\n\n            delete config.type;\n\n            Object.assign(config, config.custom);\n\n            if (config.custom?.componentName !== 'sw-switch-field' && config.custom?.componentName !== 'sw-checkbox-field') {\n                delete config.custom;\n            }\n\n            return { type: field.type, config: config };\n        },\n\n        selectionDisablingMethod(selection) {\n            if (!this.isDefaultTheme) {\n                return false;\n        }\n\n            return this.theme.getOrigin().salesChannels.has(selection.id);\n        },\n\n        isThemeCompatible(item) {\n            return this.themeCompatibleSalesChannels.includes(item.id);\n        },\n    }\n});\n","export default \"{% block sw_theme_manager_detail %}\\n    <sw-page class=\\\"sw-theme-manager-detail\\\">\\n\\n        {% block sw_theme_manager_detail_search_bar %}\\n            <template #search-bar>\\n                <sw-search-bar :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                               :entityService=\\\"themeRepository\\\"\\n                               @search=\\\"onSearch\\\">\\n                </sw-search-bar>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_smart_bar_header %}\\n            <template #smart-bar-header>\\n\\n                {% block sw_theme_manager_detail_smart_bar_header_title %}\\n                    <h2 v-if=\\\"theme\\\">\\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text %}\\n                            {{ theme.name }}\\n                        {% endblock %}\\n                    </h2>\\n\\n                    <h2 v-else>\\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text_default %}\\n                            {{ $tc('sw-theme-manager.list.textThemeOverview') }}\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n                <sw-button-group\\n                    v-tooltip.bottom=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('theme.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    class=\\\"sw-theme-manager-detail__save-button-group\\\"\\n                    :split-button=\\\"true\\\"\\n                >\\n                    {% block sw_theme_manager_detail_smart_bar_actions_save %}\\n                        <sw-button-process\\n                            v-tooltip.bottom=\\\"{\\n                                message: $tc('sw-privileges.tooltip.warning'),\\n                                disabled: acl.can('theme.editor'),\\n                                showOnDisabledElements: true\\n                            }\\\"\\n                            class=\\\"sw_theme_manager_detail__save-action\\\"\\n                            :is-loading=\\\"isLoading\\\"\\n                            :process-success=\\\"isSaveSuccessful\\\"\\n                            variant=\\\"primary\\\"\\n                            :disabled=\\\"isLoading || !acl.can('theme.editor')\\\"\\n                            @process-finish=\\\"saveFinish\\\"\\n                            @click.prevent=\\\"onSave\\\"\\n                        >\\n                            {{ $tc('sw-theme-manager.actions.save') }}\\n                        </sw-button-process>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_smart_bar_actions_save_context_menu %}\\n                        <sw-context-button>\\n                            <template #button>\\n                                <sw-button\\n                                    class=\\\"sw_theme_manager_detail__button-context-menu\\\"\\n                                    square\\n                                    variant=\\\"primary\\\"\\n                                    :disabled=\\\"isLoading || !acl.can('theme.editor')\\\"\\n                                >\\n                                    <sw-icon\\n                                            name=\\\"regular-chevron-down-xs\\\"\\n                                            size=\\\"16\\\"\\n                                    />\\n                                </sw-button>\\n                            </template>\\n\\n                            {% block sw_theme_manager_detail_smart_bar_actions_save_context_menu_actions %}\\n                                {% block sw_theme_manager_detail_smart_bar_actions_save_clean %}\\n                                    <sw-context-menu-item\\n                                        class=\\\"sw_theme_manager_detail__save-clean-action\\\"\\n                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                        @click=\\\"onSaveClean\\\"\\n                                        v-tooltip.top=\\\"{\\n                                            message: $tc('sw-theme-manager.actions.saveCleanToolTip'),\\n                                            disabled: !acl.can('theme.editor'),\\n                                            showOnDisabledElements: true\\n                                        }\\\"\\n                                    >\\n                                        {{ $tc('sw-theme-manager.actions.saveClean') }}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        </sw-context-button>\\n                    {% endblock %}\\n                </sw-button-group>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_content %}\\n            <template #content>\\n                <div\\n                    v-if=\\\"!shouldShowContent\\\"\\n                    class=\\\"sw-theme-manager-detail__content-skeleton\\\"\\n                >\\n                    <sw-skeleton />\\n                    <sw-skeleton />\\n                </div>\\n\\n                <div v-else class=\\\"sw-theme-manager-detail__content\\\">\\n                    <sw-tabs\\n                        defaultItem=\\\"default\\\"\\n                        positionIdentifier=\\\"theme-manager-detail-tabs\\\"\\n                        @new-item-active=\\\"onChangeTab\\\"\\n                    >\\n                        <template #default=\\\"{ active }\\\">\\n                            <sw-tabs-item v-if=\\\"hasMoreThanOneTab\\\"\\n                                          v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\"\\n                                          :key=\\\"tabName\\\"\\n                                          :title=\\\"tab.label\\\"\\n                                          :name=\\\"tabName\\\"\\n                                          :active=\\\"active === tabName\\\">\\n                                {{ tab.label || $tc('sw-theme-manager.general.defaultTab') }}\\n                            </sw-tabs-item>\\n                        </template>\\n\\n                        <template #content=\\\"{ active }\\\">\\n                            <template v-if=\\\"active === 'default'\\\">\\n                                <template v-if=\\\"isDerived\\\">\\n                                    {% block sw_theme_manager_detail_content_inheritance %}\\n                                        <div class=\\\"sw-theme-manager-detail__inheritance\\\">\\n                                            {% block sw_theme_manager_detail_content_inheritance_icon %}\\n                                                <sw-icon :multicolor=\\\"true\\\" size=\\\"20\\\" name=\\\"regular-link-horizontal\\\"></sw-icon>\\n                                            {% endblock %}\\n\\n                                            {% block sw_theme_manager_detail_content_inheritance_text %}\\n                                                <p class=\\\"sw-theme-manager-detail__inheritance-text\\\" v-if=\\\"parentTheme\\\">\\n                                                    {{ $tc('sw-theme-manager.detail.inheritanceInfo', 0, { parentThemeName: parentTheme.name }) }}\\n                                                </p>\\n                                                <p class=\\\"sw-theme-manager-detail__inheritance-text\\\" v-else-if=\\\"defaultTheme\\\">\\n                                                    {{ $tc('sw-theme-manager.detail.inheritanceInfo', 0, { parentThemeName: defaultTheme.name }) }}\\n                                                </p>\\n                                            {% endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block sw_theme_manager_detail_content_info %}\\n                                    <sw-card\\n                                        class=\\\"sw-theme-manager-detail__info-card\\\"\\n                                        positionIdentifier=\\\"theme-manager-detail-info\\\"\\n                                    >\\n                                        <div class=\\\"sw-theme-manager-detail__info\\\">\\n\\n                                            {% block sw_theme_manager_detail_content_info_image %}\\n                                                <div class=\\\"sw-theme-manager-detail__info-image\\\" :style=\\\"previewMedia\\\"></div>\\n                                            {% endblock %}\\n\\n                                            {% block sw_theme_manager_detail_content_info_content %}\\n                                                <div class=\\\"sw-theme-manager-detail__info-content\\\">\\n                                                    <div class=\\\"sw-theme-manager-detail__info-name\\\">{{ theme.name }}</div>\\n                                                    <div class=\\\"sw-theme-manager-detail__info-author\\\">{{ theme.author }}</div>\\n                                                    <div v-if=\\\"theme.description\\\" class=\\\"sw-theme-manager-detail__info-descr\\\">\\n                                                        <p class=\\\"sw-theme-manager-detail__info-descr-title\\\">\\n                                                            {{ $tc('sw-theme-manager.detail.description') }}:\\n                                                        </p>\\n                                                        <p>{{ theme.description |truncate(140) }}</p>\\n                                                    </div>\\n\\n                                                    <sw-entity-multi-select\\n                                                        {% if VUE3 %}\\n                                                        v-model:entityCollection=\\\"theme.salesChannels\\\"\\n                                                        {% else %}\\n                                                        v-model=\\\"theme.salesChannels\\\"\\n                                                        {% endif %}\\n                                                        class=\\\"sw-theme-manager-detail__saleschannels-select\\\"\\n                                                        :label=\\\"$tc('sw-theme-manager.detail.salesChannel')\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                                        :helpText=\\\"isDefaultTheme ? $tc('sw-theme-manager.detail.salesChannelHelpText') : null\\\"\\n                                                        :placeholder=\\\"$tc('sw-theme-manager.detail.placeholder.selectSalesChannel')\\\"\\n                                                        :selectionDisablingMethod=\\\"selectionDisablingMethod\\\">\\n                                                        <template #result-item=\\\"{ item, index }\\\">\\n                                                            <span v-if=\\\"!isThemeCompatible(item)\\\"></span>\\n                                                        </template>\\n                                                    </sw-entity-multi-select>\\n\\n                                                </div>\\n                                            {% endblock %}\\n                                        </div>\\n\\n                                        {% block sw_theme_manager_detail_content_info_context_button %}\\n                                            <sw-context-button\\n                                                class=\\\"sw-theme-manager-detail__context-button\\\"\\n                                                :zIndex=\\\"1100\\\"\\n                                            >\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_rename %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onRenameTheme(theme)\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.rename') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_create %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onDuplicateTheme(theme)\\\"\\n                                                        v-if=\\\"!theme.parentThemeId\\\"\\n                                                        :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_reset %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onReset\\\"\\n                                                        v-if=\\\"theme.configValues !== null\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                                        variant=\\\"danger\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.buttonReset') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_delete %}\\n                                                    <sw-context-menu-item\\n                                                        v-if=\\\"theme.parentThemeId\\\"\\n                                                        :disabled=\\\"!acl.can('theme.deleter') || theme.salesChannels.length > 0\\\"\\n                                                        v-tooltip.right=\\\"deleteDisabledToolTip\\\"\\n                                                        class=\\\"sw-theme-manager-detail__option-delete\\\"\\n                                                        variant=\\\"danger\\\"\\n                                                        @click=\\\"onDeleteTheme(theme)\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.delete') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n                                            </sw-context-button>\\n                                        {% endblock %}\\n                                    </sw-card>\\n                                {% endblock %}\\n                            </template>\\n\\n                            <template v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\">\\n                                <template v-if=\\\"tabName === active\\\">\\n                                    {% block sw_theme_manager_detail_content_areas %}\\n                                        <sw-card v-for=\\\"(block, blockName) in tab.blocks\\\"\\n                                                 :key=\\\"blockName\\\"\\n                                                 class=\\\"sw-theme-manager-detail__area\\\"\\n                                                 positionIdentifier=\\\"theme-manager-detail-content\\\"\\n                                                 :title=\\\"block.label\\\">\\n\\n                                            {% block sw_theme_manager_detail_content_sections %}\\n                                                <sw-card-section v-for=\\\"(section, sectionName) in block.sections\\\"\\n                                                                 :key=\\\"sectionName\\\">\\n                                                    <div v-if=\\\"section.label\\\" class=\\\"sw-theme-manager-detail__content--section_title\\\">\\n                                                        {{ section.label }}\\n                                                    </div>\\n\\n                                                    {% block sw_theme_manager_detail_content_fields %}\\n                                                        <sw-container class=\\\"sw-theme-manager-detail__content--section_field\\\">\\n                                                            <div v-for=\\\"(field, fieldName) in section.fields\\\"\\n                                                                 :key=\\\"fieldName\\\"\\n                                                                 class=\\\"sw-theme-manager-detail__content--section_field\\\"\\n                                                                 :class=\\\"{'sw-theme-manager-detail__content--section_field-full-width': field.fullWidth}\\\">\\n                                                                <template v-if=\\\"themeConfig[fieldName] && baseThemeConfig[fieldName]\\\">\\n                                                                    <template v-if=\\\"mapSwFieldTypes(field.type) === 'select'\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            v-model:value=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% else %}\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% endif %}\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritanceFunction(fieldName)\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            @update:value=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% else %}\\n                                                                            @input=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% endif %}\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-select-field\\n                                                                                    {% if VUE3 %}\\n                                                                                    v-model:value=\\\"currentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    v-model=\\\"currentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                    :placeholder=\\\"field.placeholder\\\"\\n                                                                                    :options=\\\"field.options\\\"\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor')\\\"\\n                                                                                    {% if VUE3 %}\\n                                                                                    @update:value=\\\"updateCurrentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                >\\n                                                                                </sw-select-field>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n\\n                                                                    <template v-else-if=\\\"field.type === 'url'\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            v-model:value=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% else %}\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% endif %}\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritanceFunction(fieldName)\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            @update:value=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% else %}\\n                                                                            @input=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% endif %}\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-url-field\\n                                                                                    {% if VUE3 %}\\n                                                                                    v-model:value=\\\"currentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    v-model=\\\"currentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor')\\\"\\n                                                                                    {% if VUE3 %}\\n                                                                                    @update:value=\\\"updateCurrentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                >\\n                                                                                </sw-url-field>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n                                                                    <div v-else-if=\\\"field.type === 'media'\\\">\\n\\n                                                                        <sw-upload-listener\\n                                                                            :uploadTag=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                            @media-upload-finish=\\\"successfulUpload($event, currentThemeConfig[fieldName])\\\"\\n                                                                            autoUpload>\\n                                                                        </sw-upload-listener>\\n\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            v-model:value=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% else %}\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% endif %}\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritanceFunction(fieldName)\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            @update:value=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% else %}\\n                                                                            @input=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% endif %}\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited, removeInheritance }\\\">\\n                                                                                <sw-media-upload-v2\\n                                                                                    :source=\\\"currentValue\\\"\\n                                                                                    :uploadTag=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :ref=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                                    :defaultFolder=\\\"themeRepository.schema.entity\\\"\\n                                                                                    :allowMultiSelect=\\\"false\\\"\\n                                                                                    :disabled=\\\"!acl.can('theme.editor') || themeConfig[fieldName].editable === false\\\"\\n                                                                                    @media-drop=\\\"onDropMedia($event, currentThemeConfig[fieldName])\\\"\\n                                                                                    @media-upload-sidebar-open=\\\"openMediaSidebar()\\\"\\n                                                                                    @media-upload-remove-image=\\\"removeMediaItem(fieldName, updateCurrentValue, isInherited, removeInheritance)\\\">\\n                                                                                </sw-media-upload-v2>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </div>\\n\\n                                                                    <template v-else-if=\\\"mapSwFieldTypes(field.type)\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            v-model:value=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% else %}\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% endif %}\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritanceFunction(fieldName)\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            @update:value=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% else %}\\n                                                                            @input=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% endif %}\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-colorpicker\\n                                                                                    v-if=\\\"mapSwFieldTypes(field.type) === 'colorpicker'\\\"\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor') || themeConfig[fieldName].editable === false\\\"\\n                                                                                    :value=\\\"currentValue\\\"\\n                                                                                    {% if VUE3 %}\\n                                                                                    @update:value=\\\"updateCurrentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                />\\n\\n                                                                                <sw-text-field\\n                                                                                    v-else-if=\\\"mapSwFieldTypes(field.type) === 'text' || mapSwFieldTypes(field.type) === null\\\"\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor') || themeConfig[fieldName].editable === false\\\"\\n                                                                                    :value=\\\"currentValue | cssValue\\\"\\n                                                                                    {% if VUE3 %}\\n                                                                                    @update:value=\\\"updateCurrentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                />\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n\\n                                                                    <template v-else-if=\\\"themeConfig[fieldName].editable !== false\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            v-model:value=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% else %}\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            {% endif %}\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritanceFunction(fieldName)\\\"\\n                                                                            {% if VUE3 %}\\n                                                                            @update:value=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% else %}\\n                                                                            @input=\\\"handleInheritanceInput($event, fieldName)\\\"\\n                                                                            {% endif %}\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-form-field-renderer\\n                                                                                    v-bind=\\\"getBind(field)\\\"\\n                                                                                    :value=\\\"currentValue\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor')\\\"\\n                                                                                    {% if VUE3 %}\\n                                                                                    @update:value=\\\"updateCurrentValue\\\"\\n                                                                                    {% else %}\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    {% endif %}\\n                                                                                >\\n                                                                                </sw-form-field-renderer>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n                                                                </template>\\n                                                            </div>\\n                                                        </sw-container>\\n                                                    {% endblock %}\\n                                                </sw-card-section>\\n                                            {% endblock %}\\n                                        </sw-card>\\n                                    {% endblock %}\\n                                </template>\\n                            </template>\\n                        </template>\\n                    </sw-tabs>\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_reset_modal %}\\n                <sw-modal v-if=\\\"showResetModal\\\"\\n                          @modal-close=\\\"onCloseResetModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleReset')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_reset_modal_reset_text %}\\n                        <p class=\\\"sw_theme_manager__confirm-reset-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.modalTextResetInfo') }}\\n                        </p>\\n                        <p v-if=\\\"theme.salesChannels.length > 0\\\" class=\\\"sw_theme_manager__confirm-reset-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.modalTextResetAssigned') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_reset_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_reset_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseResetModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.actions.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_reset_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeReset\\\"\\n                                           variant=\\\"danger\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.actions.buttonReset') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                     </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_delete_modal %}\\n                <sw-modal v-if=\\\"showDeleteModal\\\"\\n                          @modal-close=\\\"onCloseDeleteModal\\\"\\n                          :title=\\\"$tc('global.default.warning')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_delete_modal_info %}\\n                        <div class=\\\"sw_theme_manager__confirm-delete-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.textDeleteInfo', 0,\\n                            { themeName: theme.name }) }}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_delete_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_detail_delete_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_delete_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeDelete\\\"\\n                                           variant=\\\"danger\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonDelete') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_save_modal %}\\n                <sw-modal v-if=\\\"showSaveModal\\\"\\n                          class=\\\"sw-theme-manager-detail-modal\\\"\\n                          @modal-close=\\\"onCloseSaveModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleSave')\\\"\\n                          variant=\\\"large\\\">\\n\\n                    {% block sw_theme_manager_detail_save_modal_info %}\\n                        <div class=\\\"sw_theme_manager__confirm-save-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.textSaveInfo', 0,\\n                            { themeName: theme.name }) }}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_already_assigned_warning %}\\n                        <sw-alert\\n                            v-if=\\\"overwrittenSalesChannelAssignments.length > 0\\\"\\n                            variant=\\\"warning\\\">\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-if=\\\"overwrittenSalesChannelAssignments.length === 1\\\">\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelAlreadyAssignedModal.descriptionSingle', 0, { newThemeName: theme.name })\\\"></span>\\n                            </div>\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-else>\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelAlreadyAssignedModal.descriptionMultiple', 0, { newThemeName: theme.name })\\\"></span>\\n                            </div>\\n\\n                            <div v-for=\\\"salesChannel in overwrittenSalesChannelAssignments\\\">\\n                                <b>{{ salesChannel.oldThemeName }}</b> ({{ salesChannel.salesChannelName }})\\n                            </div>\\n                        </sw-alert>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_removed_warning %}\\n                        <sw-alert\\n                            v-if=\\\"removedSalesChannels.length > 0\\\"\\n                            variant=\\\"warning\\\">\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-if=\\\"removedSalesChannels.length === 1\\\">\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelRemovedModal.descriptionSingle', 0, { defaultThemeName: defaultTheme.name })\\\"></span>\\n                            </div>\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-else>\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelRemovedModal.descriptionMultiple', 0, { defaultThemeName: defaultTheme.name })\\\"></span>\\n                            </div>\\n\\n                            <div v-for=\\\"salesChannel in removedSalesChannels\\\">\\n                                <b>{{ theme.name }}</b> ({{ salesChannel.name }})\\n                            </div>\\n                        </sw-alert>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_detail_save_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseSaveModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_save_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeSave\\\"\\n                                           variant=\\\"primary\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonSave') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_duplicate_modal %}\\n                <sw-modal v-if=\\\"showDuplicateModal\\\"\\n                          class=\\\"sw_theme_manager__duplicate-modal\\\"\\n                          @modal-close=\\\"onCloseDuplicateModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleDuplicate')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_duplicate_modal_name_input %}\\n                        <div class=\\\"sw_theme_manager__duplicate-info\\\">\\n                            {{ $tc('sw-theme-manager.modal.textDuplicateInfo') }}\\n                        </div>\\n\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"newThemeName\\\"\\n                            {% else %}\\n                            v-model=\\\"newThemeName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--duplicate-theme-name\\\"\\n                            :label=\\\"$tc('sw-theme-manager.modal.labelDuplicateThemeName')\\\"\\n                            :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderDuplicateThemeName')\\\"\\n                        />\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_duplicate_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_detail_duplicate_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseDuplicateModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_duplicate_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeDuplicate\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"newThemeName.length < 3\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonDuplicateTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_rename_modal %}\\n                <sw-modal v-if=\\\"showRenameModal\\\"\\n                          class=\\\"sw_theme_manager__rename-modal\\\"\\n                          @modal-close=\\\"onCloseRenameModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleRename')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_rename_modal_name_input %}\\n                        <div class=\\\"sw_theme_manager__rename-info\\\">\\n                            {{ $tc('sw-theme-manager.modal.textRenameInfo') }}\\n                        </div>\\n\\n                        <sw-text-field\\n                            {% if VUE3 %}\\n                            v-model:value=\\\"newThemeName\\\"\\n                            {% else %}\\n                            v-model=\\\"newThemeName\\\"\\n                            {% endif %}\\n                            name=\\\"sw-field--rename-theme-name\\\"\\n                            :label=\\\"$tc('sw-theme-manager.modal.labelRenameThemeName')\\\"\\n                            :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderRenameThemeName')\\\"\\n                        />\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_rename_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_detail_rename_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseRenameModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_rename_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeRename\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"newThemeName.length < 3\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonRenameTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_error_modal %}\\n                <sw-modal v-if=\\\"errorModalMessage\\\"\\n                          @modal-close=\\\"onCloseErrorModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.errorModalTitle')\\\"\\n                          variant=\\\"large\\\">\\n\\n                    {% block sw_theme_manager_detail_error_modal_message %}\\n                        <pre style=\\\"white-space: pre-line;\\\">{{ errorModalMessage }}</pre>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_error_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_theme_manager_detail_error_modal_close %}\\n                                <sw-button @click=\\\"onCloseErrorModal\\\" size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonClose') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        </template>\\n\\n        {% block sw_theme_manager_detail_sidebar %}\\n            <template #sidebar>\\n                <sw-sidebar :propagateWidth=\\\"true\\\">\\n                    {% block sw_theme_manager_detail_sidebar_media %}\\n                        <sw-sidebar-media-item\\n                            ref=\\\"mediaSidebarItem\\\"\\n                            :initialFolderId=\\\"defaultMediaFolderId\\\">\\n                            <template #context-menu-items=\\\"media\\\">\\n                                {% block sw_theme_manager_detail_sidebar_media_items %}\\n                                    <template v-if=\\\"shouldShowContent\\\">\\n                                        <template v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\">\\n                                            <template v-for=\\\"block in tab.blocks\\\">\\n                                                <template v-for=\\\"section in block.sections\\\">\\n                                                    <template v-for=\\\"(field, fieldName) in section.fields\\\">\\n                                                        <sw-context-menu-item v-if=\\\"themeConfig[fieldName] && field.type === 'media'\\\"\\n                                                                              :key=\\\"fieldName\\\"\\n                                                                              @click=\\\"onAddMediaToTheme(media.mediaItem, currentThemeConfig[fieldName])\\\">\\n                                                            {{ $tc('sw-theme-manager.modal.addToMediaLabel', 0, { name: field.label }) }}\\n                                                        </sw-context-menu-item>\\n                                                    </template>\\n                                                </template>\\n                                            </template>\\n                                        </template>\\n                                    </template>\\n                                {% endblock %}\\n                            </template>\\n                        </sw-sidebar-media-item>\\n                    {% endblock %}\\n                </sw-sidebar>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './sw-theme-manager-list.html.twig';\nimport './sw-theme-manager-list.scss';\n\n/**\n * @package sales-channel\n */\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-theme-manager-list', {\n    template,\n\n    inject: ['acl'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n        Mixin.getByName('theme')\n    ],\n\n    data() {\n        return {\n            themes: [],\n            isLoading: false,\n            total: 0,\n            disableRouteParams: true,\n            salesChannelId: this.$route.params.id,\n            listMode: 'grid',\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            limit: 9,\n            term: null\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier)\n        };\n    },\n\n    computed: {\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        columnConfig() {\n            return this.getColumnConfig();\n        },\n\n        sortOptions() {\n            return [\n                { value: 'createdAt:DESC', name: this.$tc('sw-theme-manager.sorting.labelSortByCreatedDsc') },\n                { value: 'createdAt:ASC', name: this.$tc('sw-theme-manager.sorting.labelSortByCreatedAsc') },\n                { value: 'updatedAt:DESC', name: this.$tc('sw-theme-manager.sorting.labelSortByUpdatedDsc') },\n                { value: 'updatedAt:ASC', name: this.$tc('sw-theme-manager.sorting.labelSortByUpdatedAsc') }\n            ];\n        },\n\n        sortingConCat() {\n            return `${this.sortBy}:${this.sortDirection}`;\n        },\n\n        lockToolTip() {\n            return {\n                showDelay: 100,\n                message: this.$tc('sw-theme-manager.general.lockedToolTip')\n            };\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    methods: {\n        onRefresh() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n            criteria.addFilter(Criteria.equals('active', true));\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            return this.themeRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                this.total = searchResult.total;\n                this.themes = searchResult;\n                this.isLoading = false;\n\n                return this.pages;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        resetList() {\n            this.page = 1;\n            this.themes = [];\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit,\n                term: this.term,\n                sortBy: this.sortBy,\n                sortDirection: this.sortDirection\n            });\n\n            this.getList();\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.Context.api.languageId = languageId;\n            this.resetList();\n        },\n\n        onListItemClick(theme) {\n            this.$router.push({ name: 'sw.theme.manager.detail', params: { id: theme.id } });\n        },\n\n        onSortingChanged(value) {\n            [this.sortBy, this.sortDirection] = value.split(':');\n            this.resetList();\n        },\n\n        onSearch(value = null) {\n            this.term = value.length > 0 ? value : null;\n\n            this.resetList();\n        },\n\n        onPageChange({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n\n            this.getList();\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit\n            });\n        },\n\n        onListModeChange() {\n            this.listMode = (this.listMode === 'grid') ? 'list' : 'grid';\n            this.limit = (this.listMode === 'grid') ? 9 : 10;\n\n            this.resetList();\n        },\n\n        onPreviewChange(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.showMediaModal = true;\n            this.currentTheme = theme;\n        },\n\n        onPreviewImageRemove(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            theme.previewMediaId = null;\n            theme.previewMedia = null;\n            this.saveTheme(theme);\n        },\n\n        onModalClose() {\n            this.showMediaModal = false;\n            this.currentTheme = null;\n        },\n\n        onPreviewImageChange([image]) {\n            this.currentTheme.previewMediaId = image.id;\n            this.saveTheme(this.currentTheme);\n            this.currentTheme.previewMedia = image;\n        },\n\n        saveTheme(theme) {\n            this.isLoading = true;\n            return this.themeRepository.save(theme, Shopware.Context.api).then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getColumnConfig() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-theme-manager.list.gridHeaderName'),\n                primary: true\n            },\n            {\n                property: 'salesChannels.length',\n                label: this.$tc('sw-theme-manager.list.gridHeaderAssignment'),\n                sortable: false,\n            },\n            {\n                property: 'createdAt',\n                label: this.$tc('sw-theme-manager.list.gridHeaderCreated')\n            }];\n        },\n\n        deleteDisabledToolTip(theme) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-theme-manager.actions.deleteDisabledToolTip'),\n                disabled: theme.salesChannels.length === 0\n            };\n        }\n    }\n});\n","export default \"{% block sw_theme_manager_list %}\\n    <sw-page class=\\\"sw-theme-list\\\">\\n\\n        {% block sw_theme_manager_list_search_bar %}\\n            <template #search-bar>\\n                <sw-search-bar :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                               :initialSearchType=\\\"$tc('sw-theme-manager.general.mainMenuItemGeneral')\\\"\\n                               @search=\\\"onSearch\\\">\\n                </sw-search-bar>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_list_toolbar %}\\n            <template #smart-bar-header>\\n                <h2> {{ $tc('sw-theme-manager.general.mainMenuItemGeneral') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_card_view %}\\n            <template #content>\\n                <sw-card-view>\\n\\n                    {% block sw_themes_list_listing %}\\n                        <div class=\\\"sw-theme-list__content\\\">\\n\\n                            {% block sw_theme_list_listing_actions %}\\n                                <div class=\\\"sw-theme-list__actions\\\">\\n\\n                                    {% block sw_theme_list_listing_title %}\\n                                        <h3>{{ $tc('sw-theme-manager.general.mainMenuHeader') }}</h3>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_listing_actions_sorting %}\\n                                        <div class=\\\"sw-theme-list__actions-sorting\\\">\\n                                            <sw-select-field\\n                                                name=\\\"sortType\\\"\\n                                                :label=\\\"$tc('sw-theme-manager.sorting.labelSort')\\\"\\n                                                :value=\\\"sortingConCat\\\"\\n                                                {% if VUE3 %}\\n                                                @update:value=\\\"onSortingChanged\\\"\\n                                                {% else %}\\n                                                @change=\\\"onSortingChanged\\\"\\n                                                {% endif %}\\n                                                aside\\n                                            >\\n\\n                                                {% block sw_theme_list_listing_actions_sorting_options %}\\n                                                <option v-for=\\\"sortOption in sortOptions\\\"\\n                                                        :value=\\\"sortOption.value\\\">\\n                                                    {{ sortOption.name }}\\n                                                </option>\\n                                                {% endblock %}\\n                                            </sw-select-field>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_listing_actions_mode %}\\n                                        <div class=\\\"sw-theme-list__actions-mode\\\" @click=\\\"onListModeChange\\\">\\n                                            <sw-icon name=\\\"regular-view-normal\\\" size=\\\"16\\\" v-if=\\\"listMode === 'grid'\\\"></sw-icon>\\n                                            <sw-icon name=\\\"regular-view-grid\\\" size=\\\"16\\\" v-if=\\\"listMode === 'list'\\\"></sw-icon>\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_list_listing_list %}\\n                                <div class=\\\"sw-theme-list__list\\\">\\n\\n                                    {% block sw_theme_list_listing_list_card %}\\n                                        <sw-card class=\\\"sw-theme-list__list-card\\\" v-if=\\\"listMode === 'list'\\\">\\n                                            <template #grid>\\n\\n                                                {% block sw_theme_list_listing_list_data_grid %}\\n                                                    <sw-data-grid\\n                                                        class=\\\"sw-theme-list__list-data-grid\\\"\\n                                                        identifier=\\\"sw-theme-list\\\"\\n                                                        :isLoading=\\\"isLoading\\\"\\n                                                        :dataSource=\\\"themes\\\"\\n                                                        :columns=\\\"columnConfig\\\"\\n                                                        :skeletonItemAmount=\\\"limit\\\"\\n                                                        :sortBy=\\\"sortBy\\\"\\n                                                        :sortDirection=\\\"sortDirection\\\"\\n                                                        :allowInlineEdit=\\\"false\\\"\\n                                                        :allowColumnEdit=\\\"false\\\"\\n                                                        :showSettings=\\\"false\\\"\\n                                                        :showSelection=\\\"false\\\"\\n                                                        @column-sort=\\\"onSortColumn\\\">\\n\\n                                                        {% block sw_theme_list_listing_list_data_grid_column_name %}\\n                                                            <template #column-name=\\\"{ item }\\\">\\n                                                                <sw-icon\\n                                                                    name=\\\"regular-lock\\\"\\n                                                                    class=\\\"sw-theme-list__icon-lock\\\"\\n                                                                    v-if=\\\"!item.parentThemeId\\\"\\n                                                                    v-tooltip=\\\"lockToolTip\\\"\\n                                                                    size=\\\"14\\\">\\n                                                                </sw-icon>\\n                                                                <router-link :to=\\\"{ name: 'sw.theme.manager.detail', params: { id: item.id } }\\\">\\n                                                                    {{ item.name }}\\n                                                                </router-link>\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_theme_list_listing_list_data_grid_column_assignment %}\\n                                                            <template #column-assignment=\\\"{ item }\\\">\\n                                                                {{ item.salesChannels.length }}\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_theme_list_listing_list_data_grid_column_created %}\\n                                                            <template #column-createdAt=\\\"{ item }\\\">\\n                                                                {{ dateFilter(item.createdAt, { hour: '2-digit', minute: '2-digit' }) }}\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_theme_list_listing_list_data_grid_actions %}\\n                                                            <template #actions=\\\"{ item }\\\">\\n                                                                {% block sw_theme_list_listing_list_data_grid_actions_edit %}\\n                                                                    <sw-context-menu-item\\n                                                                        class=\\\"sw-theme-list-item__option-edit\\\"\\n                                                                        :routerLink=\\\"{ name: 'sw.theme.manager.detail', params: { id: item.id } }\\\">\\n                                                                        {{ $tc('sw-theme-manager.themeListItem.edit') }}\\n                                                                    </sw-context-menu-item>\\n                                                                {% endblock %}\\n\\n                                                                {% block sw_theme_list_listing_list_data_grid_actions_rename %}\\n                                                                    <sw-context-menu-item\\n                                                                        @click=\\\"onRenameTheme(item)\\\"\\n                                                                        class=\\\"sw-theme-list-item__option-rename\\\"\\n                                                                        :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                        {{ $tc('sw-theme-manager.themeListItem.rename') }}\\n                                                                    </sw-context-menu-item>\\n                                                                {% endblock %}\\n\\n                                                                {% block sw_theme_list_listing_list_data_grid_actions_delete %}\\n                                                                    <sw-context-menu-item\\n                                                                        variant=\\\"danger\\\"\\n                                                                        class=\\\"sw-theme-list-item__option-delete\\\"\\n                                                                        :disabled=\\\"item.salesChannels.length > 0 || !acl.can('theme.deleter')\\\"\\n                                                                        v-tooltip=\\\"deleteDisabledToolTip(item)\\\"\\n                                                                        @click=\\\"onDeleteTheme(item)\\\"\\n                                                                        v-if=\\\"item.parentThemeId\\\">\\n\\n                                                                        {{ $tc('sw-theme-manager.themeListItem.delete') }}\\n                                                                    </sw-context-menu-item>\\n                                                                {% endblock %}\\n\\n                                                                {% block sw_theme_list_listing_list_data_grid_actions_create %}\\n                                                                    <sw-context-menu-item\\n                                                                        v-if=\\\"!item.parentThemeId\\\"\\n                                                                        class=\\\"sw-theme-list-item__option-duplicate\\\"\\n                                                                        @click=\\\"onDuplicateTheme(item)\\\"\\n                                                                        :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                                        {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                                    </sw-context-menu-item>\\n                                                                {% endblock %}\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_theme_list_listing_list_data_grid_pagination %}\\n                                                            <template #pagination>\\n                                                                <sw-pagination\\n                                                                    :page=\\\"page\\\"\\n                                                                    :limit=\\\"limit\\\"\\n                                                                    :total=\\\"total\\\"\\n                                                                    :steps=\\\"[5, 10, 25, 50]\\\"\\n                                                                    @page-change=\\\"onPageChange\\\">\\n                                                                </sw-pagination>\\n                                                            </template>\\n                                                        {% endblock %}\\n                                                    </sw-data-grid>\\n                                                {% endblock %}\\n                                            </template>\\n                                        </sw-card>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_listing_list_grid %}\\n                                        <div class=\\\"sw-theme-list__list-grid\\\" v-if=\\\"listMode === 'grid'\\\">\\n\\n                                            {% block sw_theme_list_listing_list_grid_content %}\\n                                                <div class=\\\"sw-theme-list__list-grid-content\\\">\\n                                                    {% block sw_theme_list_listing_list_item %}\\n                                                        <template v-if=\\\"!isLoading\\\">\\n                                                            <sw-theme-list-item\\n                                                            v-for=\\\"theme in themes\\\"\\n                                                            :theme=\\\"theme\\\"\\n                                                            :key=\\\"theme.id\\\"\\n                                                            @preview-image-change=\\\"onPreviewChange\\\"\\n                                                            @item-click=\\\"onListItemClick\\\">\\n\\n                                                            <template #contextMenu>\\n                                                                <sw-context-button :zIndex=\\\"1100\\\"\\n                                                                                   class=\\\"sw-theme-list-item__options\\\">\\n\\n                                                                    {% block sw_theme_list_listing_list_item_option_add_preview %}\\n                                                                        <sw-context-menu-item\\n                                                                            class=\\\"sw-theme-list-item__option-preview\\\"\\n                                                                            @click=\\\"onPreviewChange(theme)\\\"\\n                                                                            :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                            {{ $tc('sw-theme-manager.themeListItem.addPreviewImage') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n\\n                                                                    {% block sw_theme_list_listing_list_item_option_remove_preview %}\\n                                                                        <sw-context-menu-item\\n                                                                            class=\\\"sw-theme-list-item__option-preview sw-theme-list-item__option-preview-remove\\\"\\n                                                                            v-if=\\\"theme.previewMediaId\\\"\\n                                                                            variant=\\\"danger\\\"\\n                                                                            @click=\\\"onPreviewImageRemove(theme)\\\"\\n                                                                            :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                            {{ $tc('sw-theme-manager.themeListItem.removePreviewImage') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n\\n                                                                    {% block sw_theme_list_listing_list_item_option_rename %}\\n                                                                        <sw-context-menu-item\\n                                                                            @click=\\\"onRenameTheme(theme)\\\"\\n                                                                            class=\\\"sw-theme-list-item__option-rename\\\"\\n                                                                            :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                            {{ $tc('sw-theme-manager.themeListItem.rename') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n\\n                                                                    {% block sw_theme_list_listing_list_item_option_create %}\\n                                                                        <sw-context-menu-item\\n                                                                            v-if=\\\"!theme.parentThemeId\\\"\\n                                                                            class=\\\"sw-theme-list-item__option-duplicate\\\"\\n                                                                            @click=\\\"onDuplicateTheme(theme)\\\"\\n                                                                            :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                                            {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n\\n                                                                    {% block sw_theme_list_listing_list_item_option_delete %}\\n                                                                        <sw-context-menu-item\\n                                                                            v-if=\\\"theme.parentThemeId\\\"\\n                                                                            class=\\\"sw-theme-list-item__option-delete\\\"\\n                                                                            variant=\\\"danger\\\"\\n                                                                            :disabled=\\\"theme.salesChannels.length > 0 || !acl.can('theme.deleter')\\\"\\n                                                                            v-tooltip=\\\"deleteDisabledToolTip(theme)\\\"\\n                                                                            @click=\\\"onDeleteTheme(theme)\\\">\\n                                                                            {{ $tc('sw-theme-manager.themeListItem.delete') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n                                                                </sw-context-button>\\n                                                            </template>\\n                                                        </sw-theme-list-item>\\n                                                        </template>\\n\\n                                                        <template v-else>\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                            <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {% block sw_theme_list_listing_pagination %}\\n                                            <sw-pagination class=\\\"sw-theme-list__list-pagination\\\"\\n                                                           v-if=\\\"!isLoading\\\"\\n                                                           :page=\\\"page\\\"\\n                                                           :limit=\\\"limit\\\"\\n                                                           :total=\\\"total\\\"\\n                                                           :steps=\\\"[9]\\\"\\n                                                           @page-change=\\\"onPageChange\\\">\\n                                            </sw-pagination>\\n                                            {% endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_list_media_modal %}\\n                        <sw-media-modal-v2\\n                            variant=\\\"regular\\\"\\n                            v-if=\\\"showMediaModal\\\"\\n                            :caption=\\\"$tc('sw-theme-manager.general.captionMediaUpload')\\\"\\n                            entityContext=\\\"theme\\\"\\n                            :allowMultiSelect=\\\"false\\\"\\n                            @media-modal-selection-change=\\\"onPreviewImageChange\\\"\\n                            @modal-close=\\\"onModalClose\\\">\\n                        </sw-media-modal-v2>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_list_delete_modal %}\\n                        <sw-modal v-if=\\\"showDeleteModal\\\"\\n                                  @modal-close=\\\"onCloseDeleteModal\\\"\\n                                  :title=\\\"$tc('global.default.warning')\\\"\\n                                  variant=\\\"small\\\">\\n\\n                            {% block sw_theme_list_delete_modal_info %}\\n                                <div class=\\\"sw_theme_manager__confirm-delete-text\\\">\\n                                    {{ $tc('sw-theme-manager.modal.textDeleteInfo', 0,\\n                                    { themeName: modalTheme.name }) }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_list_delete_modal_footer %}\\n                                <template #modal-footer>\\n                                    {% block sw_theme_list_delete_modal_cancel %}\\n                                        <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_delete_modal_confirm %}\\n                                        <sw-button @click=\\\"onConfirmThemeDelete\\\"\\n                                                   variant=\\\"danger\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonDelete') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-modal>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_list_duplicate_modal %}\\n                        <sw-modal v-if=\\\"showDuplicateModal\\\"\\n                                  class=\\\"sw_theme_manager__duplicate-modal\\\"\\n                                  @modal-close=\\\"onCloseDuplicateModal\\\"\\n                                  :title=\\\"$tc('sw-theme-manager.modal.modalTitleDuplicate')\\\"\\n                                  variant=\\\"small\\\">\\n\\n                            {% block sw_theme_list_duplicate__modal_name_input %}\\n                                <div class=\\\"sw_theme_manager__duplicate-info\\\">\\n                                    {{ $tc('sw-theme-manager.modal.textDuplicateInfo') }}\\n                                </div>\\n\\n                                <sw-text-field\\n                                    {% if VUE3 %}\\n                                    v-model:value=\\\"newThemeName\\\"\\n                                    {% else %}\\n                                    v-model=\\\"newThemeName\\\"\\n                                    {% endif %}\\n                                    name=\\\"sw-field--duplicate-theme-name\\\"\\n                                    :label=\\\"$tc('sw-theme-manager.modal.labelDuplicateThemeName')\\\"\\n                                    :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderDuplicateThemeName')\\\"\\n                                />\\n                            {% endblock %}\\n\\n                            {% block sw_theme_list_duplicate_modal_footer %}\\n                                <template #modal-footer>\\n                                    {% block sw_theme_list_duplicate_modal_cancel %}\\n                                        <sw-button @click=\\\"onCloseDuplicateModal\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_duplicate_modal_confirm %}\\n                                        <sw-button @click=\\\"onConfirmThemeDuplicate\\\"\\n                                                   variant=\\\"primary\\\"\\n                                                   :disabled=\\\"newThemeName.length < 3\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonDuplicateTheme') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-modal>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_list_rename_modal %}\\n                        <sw-modal v-if=\\\"showRenameModal\\\"\\n                                  class=\\\"sw_theme_manager__rename-modal\\\"\\n                                  @modal-close=\\\"onCloseRenameModal\\\"\\n                                  :title=\\\"$tc('sw-theme-manager.modal.modalTitleRename')\\\"\\n                                  variant=\\\"small\\\">\\n\\n                            {% block sw_theme_list_rename__modal_name_input %}\\n                                <div class=\\\"sw_theme_manager__rename-info\\\">\\n                                    {{ $tc('sw-theme-manager.modal.textRenameInfo') }}\\n                                </div>\\n\\n                                <sw-text-field\\n                                    {% if VUE3 %}\\n                                    v-model:value=\\\"newThemeName\\\"\\n                                    {% else %}\\n                                    v-model=\\\"newThemeName\\\"\\n                                    {% endif %}\\n                                    name=\\\"sw-field--rename-theme-name\\\"\\n                                    :label=\\\"$tc('sw-theme-manager.modal.labelRenameThemeName')\\\"\\n                                    :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderRenameThemeName')\\\"\\n                                />\\n                            {% endblock %}\\n\\n                            {% block sw_theme_list_rename_modal_footer %}\\n                                <template #modal-footer>\\n                                    {% block sw_theme_list_rename_modal_cancel %}\\n                                        <sw-button @click=\\\"onCloseRenameModal\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_list_rename_modal_confirm %}\\n                                        <sw-button @click=\\\"onConfirmThemeRename\\\"\\n                                                   variant=\\\"primary\\\"\\n                                                   :disabled=\\\"newThemeName.length < 3\\\"\\n                                                   size=\\\"small\\\">\\n                                            {{ $tc('sw-theme-manager.modal.buttonRenameTheme') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-modal>\\n                    {% endblock %}\\n                </sw-card-view>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","export default \"{% block sw_theme_list_item %}\\n    <div class=\\\"sw-theme-list-item\\\" :class=\\\"componentClasses\\\">\\n\\n        {% block sw_theme_list_item_options %}\\n            <slot name=\\\"contextMenu\\\"></slot>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_item_image %}\\n            <div class=\\\"sw-theme-list-item__image\\\"\\n                 v-if=\\\"theme\\\"\\n                 :style=\\\"previewMedia\\\"\\n                 @click=\\\"emitItemClick(theme)\\\">\\n            </div>\\n\\n            <div class=\\\"sw-theme-list-item__image is--empty\\\" v-else>\\n                {{ $tc('sw-theme-manager.themeListItem.emptyText') }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_item_info %}\\n            <div class=\\\"sw-theme-list-item__info\\\">\\n                <div v-if=\\\"theme\\\" class=\\\"sw-theme-list-item__status\\\" :class=\\\"componentClasses\\\"></div>\\n                <div class=\\\"sw-theme-list-item__title\\\" v-if=\\\"theme\\\" @click=\\\"onThemeClick\\\">{{ theme.name }}</div>\\n                <sw-icon v-if=\\\"theme && !theme.parentThemeId\\\"\\n                         class=\\\"sw-theme-list-item__locked\\\"\\n                         name=\\\"regular-lock\\\"\\n                         v-tooltip=\\\"lockToolTip\\\"\\n                         size=\\\"16\\\">\\n                </sw-icon>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './sw-theme-list-item.html.twig';\nimport './sw-theme-list-item.scss';\n\n/**\n * @package sales-channel\n */\n\nconst { Component, Application } = Shopware;\n\nComponent.register('sw-theme-list-item', {\n    template,\n\n    props: {\n        theme: {\n            type: Object,\n            required: false,\n            default: null\n        },\n\n        active: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        previewMedia() {\n            if (this.theme.previewMedia && this.theme.previewMedia.id && this.theme.previewMedia.url) {\n                return {\n                    'background-image': `url('${this.theme.previewMedia.url}')`,\n                    'background-size': 'cover'\n                };\n            }\n\n            return {\n                'background-image': this.defaultThemeAsset\n            };\n        },\n\n        defaultThemeAsset() {\n            const assetFilter = Shopware.Filter.getByName('asset');\n            const previewUrl = assetFilter('administration/static/img/theme/default_theme_preview.jpg');\n\n            return `url(${previewUrl})`;\n        },\n\n        lockToolTip() {\n            return {\n                showDelay: 100,\n                message: this.$tc('sw-theme-manager.general.lockedToolTip')\n            };\n        },\n\n        componentClasses() {\n            return {\n                'is--active': this.isActive(),\n                'is--disabled': this.disabled\n            };\n        }\n    },\n\n    methods: {\n        isActive() {\n            return this.theme && this.theme.salesChannels && this.theme.salesChannels.length > 0 || this.active;\n        },\n\n        onChangePreviewImage(theme) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('preview-image-change', theme);\n        },\n\n        onThemeClick() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('item-click', this.theme);\n        },\n\n        onRemovePreviewImage(theme) {\n            theme.previewMediaId = null;\n            theme.save();\n            theme.previewMedia = null;\n        },\n\n        onDelete(theme) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('theme-delete', theme);\n        },\n\n        emitItemClick(item) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('item-click', item);\n        }\n    }\n});\n","export default \"{% block sw_theme_modal %}\\n    <sw-modal class=\\\"sw-theme-modal\\\" @modal-close=\\\"closeModal\\\" :title=\\\"$tc('sw-theme-manager.themeModal.modalTitle')\\\">\\n\\n        {% block sw_theme_modal_header %}\\n            <div class=\\\"sw-theme-modal__header\\\">\\n\\n                {% block sw_theme_modal_header_title %}\\n                    <div class=\\\"sw-theme-modal__header-title\\\">\\n                        {{ $tc('sw-theme-manager.themeModal.headline') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_theme_modal_header_search %}\\n                    <sw-simple-search-field class=\\\"sw-theme-modal__header-search\\\"\\n                        :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                        @search-term-change=\\\"onSearch\\\">\\n                    </sw-simple-search-field>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_modal_content %}\\n            <div class=\\\"sw-theme-modal__content\\\">\\n\\n                {% block sw_theme_modal_loader %}\\n                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block sw_theme_modal_content %}\\n                    <sw-container v-else columns=\\\"repeat(auto-fill, minmax(250px, 1fr))\\\" gap=\\\"24px\\\">\\n                        {% block sw_theme_modal_content_listing %}\\n                            <div v-for=\\\"theme in themes\\\" class=\\\"sw-theme-modal__content-item\\\" :class=\\\"{ 'is--selected': theme.id === selected }\\\">\\n                                {% block sw_theme_modal_content_listing_item %}\\n\\n                                    {% block sw_theme_modal_content_listing_item_checkbox %}\\n                                        <sw-checkbox-field @change=\\\"onSelection(theme.id)\\\" :value=\\\"theme.id === selected\\\"></sw-checkbox-field>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_modal_content_listing_item_inner %}\\n                                        <sw-theme-list-item\\n                                            :theme=\\\"theme\\\"\\n                                            :key=\\\"theme.id\\\"\\n                                            @item-click=\\\"selectItem(theme.id)\\\">\\n                                        </sw-theme-list-item>\\n                                    {% endblock %}\\n\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_modal_footer %}\\n            <template #modal-footer>\\n                <sw-button @click=\\\"closeModal\\\">\\n                    {{ $tc('sw-theme-manager.themeModal.actionCancel') }}\\n                </sw-button>\\n                <sw-button @click=\\\"selectLayout\\\" variant=\\\"primary\\\">\\n                    {{ $tc('sw-theme-manager.themeModal.actionConfirm') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './sw-theme-modal.html.twig';\nimport './sw-theme-modal.scss';\n\n/**\n * @package sales-channel\n */\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-theme-modal', {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            selected: null,\n            isLoading: false,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            term: null,\n            total: null,\n            themes: []\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n            criteria.addFilter(Criteria.equals('active', true));\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            return this.themeRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                this.total = searchResult.total;\n                this.themes = searchResult;\n                this.isLoading = false;\n\n                return this.themes;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        selectLayout() {\n            this.$emit('modal-theme-select', this.selected);\n            this.closeModal();\n        },\n\n        selectItem(themeId) {\n            this.selected = themeId;\n        },\n\n        onSearch(value) {\n            this.term = value.length > 0 ? value.length : null;\n\n            this.page = 1;\n            this.getList();\n        },\n\n        onSelection(themeId) {\n            this.selected = themeId;\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n            this.selected = null;\n            this.term = null;\n        }\n    }\n});\n","/**\n * @package sales-channel\n */\n\nimport './mixin/sw-theme.mixin';\nimport './page/sw-theme-manager-detail';\nimport './page/sw-theme-manager-list';\nimport './component/sw-theme-list-item/';\nimport './component/sw-theme-modal/';\nimport './acl';\n\nconst { Module } = Shopware;\n\nModule.register('sw-theme-manager', {\n    type: 'core',\n    title: 'sw-theme-manager.general.mainMenuItemGeneral',\n    description: 'sw-theme-manager.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#ff68b4',\n    icon: 'regular-content',\n    favicon: 'icon-module-content.png',\n    entity: 'theme',\n\n    routes: {\n        index: {\n            component: 'sw-theme-manager-list',\n            path: 'index',\n            meta: {\n                privilege: 'theme.viewer'\n            }\n        },\n        detail: {\n            component: 'sw-theme-manager-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.theme.manager.index',\n                privilege: 'theme.viewer'\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-theme-manager',\n        label: 'sw-theme-manager.general.mainMenuItemGeneral',\n        color: '#ff68b4',\n        icon: 'default-object-image',\n        path: 'sw.theme.manager.index',\n        privilege: 'theme.viewer',\n        position: 80,\n        parent: 'sw-content'\n    }],\n\n    // Add theme route to sales channel\n    routeMiddleware(next, currentRoute) {\n        const name = 'sw.sales.channel.detail.theme';\n        if (\n            currentRoute.name === 'sw.sales.channel.detail'\n            && currentRoute.children.every(child => child.name !== name)\n        ) {\n            currentRoute.children.push({\n                component: 'sw-sales-channel-detail-theme',\n                name,\n                isChildren: true,\n                path: '/sw/sales/channel/detail/:id/theme',\n                meta: {\n                    parentPath: 'sw.sales.channel.list',\n                    privilege: 'sales_channel.viewer'\n                }\n            });\n        }\n\n        next(currentRoute);\n    }\n});\n","import template from './sw-settings-storefront-index.html.twig';\nimport './sw-settings-storefront-index.scss';\n\n/**\n * @package services-settings\n */\nShopware.Component.register('sw-settings-storefront-index', {\n    template,\n\n    inject: ['systemConfigApiService'],\n\n    data() {\n        return {\n            isLoading: true,\n            isSaveSuccessful: false,\n            storefrontSettings: {\n                'core.storefrontSettings.iconCache': true,\n                'core.storefrontSettings.asyncThemeCompilation': false\n            },\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            await this.loadPageContent();\n        },\n\n        async loadPageContent() {\n            await this.loadstorefrontSettings();\n        },\n\n        async loadstorefrontSettings() {\n            this.isLoading = true;\n            this.storefrontSettings = await this.systemConfigApiService.getValues('core.storefrontSettings');\n\n            // Default when config is empty\n            if (Object.keys(this.storefrontSettings).length === 0) {\n                this.storefrontSettings = {\n                    'core.storefrontSettings.iconCache': true,\n                };\n            }\n\n            if (Object.keys(this.storefrontSettings).length === 0) {\n                this.storefrontSettings = {\n                    'core.storefrontSettings.asyncThemeCompilation': false,\n                };\n            }\n\n            this.isLoading = false;\n        },\n\n        async savestorefrontSettings() {\n            this.isLoading = true;\n\n            // Inputs cannot return null\n            if (this.storefrontSettings['core.storefrontSettings.iconCache'] === '') {\n                this.storefrontSettings['core.storefrontSettings.iconCache'] = true;\n            }\n\n            if (this.storefrontSettings['core.storefrontSettings.asyncThemeCompilation'] === '') {\n                this.storefrontSettings['core.storefrontSettings.asyncThemeCompilation'] = false;\n            }\n\n            await this.systemConfigApiService.saveValues(this.storefrontSettings);\n            this.isLoading = false;\n        },\n\n        async onSaveFinish() {\n            await this.loadPageContent();\n        },\n    },\n});\n","export default \"{% block sw_settings_storefront_index %}\\n<sw-page class=\\\"sw-settings-storefront\\\">\\n\\n    {% block sw_settings_storefront_smart_bar_header %}\\n    <template #smart-bar-header>\\n        {% block sw_settings_storefront_smart_bar_header_title %}\\n        <h2>\\n            {% block sw_settings_storefront_smart_bar_header_title_text %}\\n            {{ $tc('sw-settings.index.title') }}\\n            <sw-icon\\n                name=\\\"regular-chevron-right-xs\\\"\\n                small\\n            />\\n            {{ $tc('sw-settings-storefront.general.textHeadline') }}\\n            {% endblock %}\\n        </h2>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    {% block sw_settings_storefront_smart_bar_actions %}\\n    <template #smart-bar-actions>\\n        {% block sw_settings_storefront_actions_save %}\\n        <sw-button-process\\n            :is-loading=\\\"isLoading\\\"\\n            :process-success=\\\"isSaveSuccessful\\\"\\n            variant=\\\"primary\\\"\\n            @process-finish=\\\"onSaveFinish\\\"\\n            @click=\\\"savestorefrontSettings\\\"\\n        >\\n            {{ $tc('global.default.save') }}\\n        </sw-button-process>\\n        {% endblock %}\\n    </template>\\n    {% endblock %}\\n\\n    {% block sw_settings_storefront_content %}\\n    <template #content>\\n        <sw-card-view>\\n            <sw-skeleton v-if=\\\"isLoading\\\" />\\n\\n            {% block sw_settings_storefront %}\\n            <sw-card\\n                position-identifier=\\\"sw-settings-storefront--settings\\\"\\n                :title=\\\"$tc('sw-settings-storefront.configuration.cardTitle')\\\"\\n                class=\\\"sw-settings-storefront__input-fields\\\"\\n            >\\n\\n                {% block sw_settings_storefront_smtp_settings %}\\n                    <sw-settings-storefront-configuration\\n                        :storefront-settings=\\\"storefrontSettings\\\"\\n                    />\\n                {% endblock %}\\n\\n            </sw-card>\\n            {% endblock %}\\n        </sw-card-view>\\n    </template>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\\n\";","import template from './sw-settings-storefront-configuration.html.twig';\nimport './sw-settings-storefront-configuration.scss';\n\n/**\n * @package services-settings\n */\nShopware.Component.register('sw-settings-storefront-configuration', {\n    template,\n\n    inject: ['feature'],\n\n    props: {\n        storefrontSettings: {\n            type: Object,\n            required: true,\n        },\n    },\n});\n","export default \"{% block sw_settings_storefront %}\\n<div class=\\\"sw-settings-storefront-configuration\\\">\\n    {% block sw_settings_storefront_settings_icon_cache %}\\n    <sw-switch-field\\n        {% if VUE3 %}\\n        v-model:value=\\\"storefrontSettings['core.storefrontSettings.iconCache']\\\"\\n        {% else %}\\n        v-model=\\\"storefrontSettings['core.storefrontSettings.iconCache']\\\"\\n        {% endif %}\\n        :label=\\\"$tc('sw-settings-storefront.configuration.iconCache')\\\"\\n        v-tooltip.top=\\\"{\\n                        message: $tc('sw-settings-storefront.configuration.iconCacheToolTip'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n    />\\n    {% endblock %}\\n    {% block sw_settings_storefront_settings_theme_async %}\\n        <sw-switch-field\\n            v-if=\\\"feature.isActive('ASYNC_THEME_COMPILATION')\\\"\\n            v-model=\\\"storefrontSettings['core.storefrontSettings.asyncThemeCompilation']\\\"\\n            :label=\\\"$tc('sw-settings-storefront.configuration.theme.async')\\\"\\n            v-tooltip.top=\\\"{\\n                        message: $tc('sw-settings-storefront.configuration.theme.asyncTooltip'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n        />\\n    {% endblock %}\\n</div>\\n{% endblock %}\\n\";","import './page/sw-settings-storefront-index';\nimport './component/sw-settings-storefront-configuration';\n\n/**\n * @package services-settings\n */\nShopware.Module.register('sw-settings-storefront', {\n    type: 'core',\n    name: 'sw-settings-storefront',\n    title: 'sw-settings-storefront.general.mainMenuItemGeneral',\n    description: 'sw-settings-storefront.general.description',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n    favicon: 'icon-module-settings.png',\n\n    routes: {\n        index: {\n            component: 'sw-settings-storefront-index',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index.system',\n                privilege: 'system.system_config',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'system',\n        to: 'sw.settings.storefront.index',\n        icon: 'regular-storefront',\n        privilege: 'system.system_config',\n    },\n});\n","import template from './sw-sales-channel-detail.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-detail', {\n    template,\n\n    methods: {\n        getLoadSalesChannelCriteria() {\n            const criteria = this.$super('getLoadSalesChannelCriteria');\n\n            criteria.addAssociation('themes');\n\n            return criteria;\n        }\n    }\n});\n","export default \"{%  block sw_sales_channel_detail_content_tab_theme %}\\n    <sw-tabs-item :disabled=\\\"isProductComparison || isLoading\\\"\\n                  :route=\\\"{ name: 'sw.sales.channel.detail.theme', params: { id: $route.params.id } }\\\"\\n                  :title=\\\"$tc('sw-sales-channel.detail.tabTheme')\\\">\\n        {{ $tc('sw-sales-channel.detail.tabTheme') }}\\n    </sw-tabs-item>\\n{% endblock %}\\n\";","export default \"{% block sw_sales_channel_detail_theme %}\\n    <sw-card :title=\\\"$tc('sales-channel-theme.title')\\\" :isLoading=\\\"isLoading\\\">\\n        <div class=\\\"sw-sales-channel-detail-theme\\\">\\n\\n            {% block sw_sales_channel_detail_theme_preview %}\\n                <div class=\\\"sw-sales-channel-detail-theme__preview\\\">\\n                    {% block sw_sales_channel_detail_theme_preview_item %}\\n                        <div @click=\\\"openThemeModal\\\">\\n                            <sw-theme-list-item\\n                                :theme=\\\"theme\\\"\\n                                :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                :active=\\\"!!theme\\\">\\n                            </sw-theme-list-item>\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_modal %}\\n                        <sw-theme-modal\\n                            v-if=\\\"showThemeSelectionModal\\\"\\n                            @modal-theme-select=\\\"onChangeTheme\\\"\\n                            @modal-close=\\\"closeThemeModal\\\">\\n                        </sw-theme-modal>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_sales_channel_detail_theme_info %}\\n                <div class=\\\"sw-sales-channel-detail-theme__info\\\">\\n\\n                    {% block sw_sales_channel_detail_theme_info_content %}\\n                        <div class=\\\"sw-sales-channel-detail-theme__info-content\\\">\\n\\n                            {% block sw_sales_channel_detail_theme_info_name %}\\n                                <div class=\\\"sw-sales-channel-detail-theme__info-name\\\" :class=\\\"{ 'is--empty': !theme }\\\">\\n                                    {{ theme ? theme.name : $tc('sales-channel-theme.defaultTitle') }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_author %}\\n                                <div v-if=\\\"theme\\\" class=\\\"sw-sales-channel-detail-theme__info-author\\\">\\n                                    {{ theme.author }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_description %}\\n                                <div v-if=\\\"theme && theme.description\\\" class=\\\"sw-sales-channel-detail-theme__info-description\\\">\\n                                    <p class=\\\"sw-sales-channel-detail-theme__info-description-title\\\">\\n                                        {{ $tc('sw-theme-manager.detail.description') }}:\\n                                    </p>\\n                                    <p>{{ theme.description |truncate(140) }}</p>\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_info_actions %}\\n                        <div class=\\\"sw-sales-channel-detail-theme__info-actions\\\">\\n\\n                            {% block sw_sales_channel_detail_theme_info_actions_theme %}\\n                                <sw-button size=\\\"small\\\" @click=\\\"openThemeModal\\\" :disabled=\\\"!acl.can('sales_channel.editor')\\\">\\n                                    {{ theme ? $tc('sales-channel-theme.changeTheme') : $tc('sales-channel-theme.changeThemeEmpty') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_actions_manager %}\\n                                <sw-button size=\\\"small\\\" @click=\\\"openInThemeManager\\\" :disabled=\\\"!acl.can('sales_channel.editor')\\\">\\n                                    {{ theme ? $tc('sales-channel-theme.editContent'): $tc('sales-channel-theme.createTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_sales_channel_detail_theme_change_modal %}\\n                <sw-modal v-if=\\\"showChangeModal\\\"\\n                          @modal-close=\\\"onCloseChangeModal\\\"\\n                          :title=\\\"$tc('sales-channel-theme.modal.modalTitleChange')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_sales_channel_detail_theme_change_modal_info %}\\n                        <p class=\\\"sw-sales-channel-detail-theme__confirm-change-text\\\">\\n                            {{ $tc('sales-channel-theme.modal.textChangeTheme') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_change_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block sw_sales_channel_detail_theme_change_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseChangeModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sales-channel-theme.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_change_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmChange\\\"\\n                                           variant=\\\"primary\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sales-channel-theme.modal.buttonChange') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        </div>\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './sw-sales-channel-detail-theme.html.twig';\nimport './sw-sales-channel-detail-theme.scss';\n\n/**\n * @package sales-channel\n */\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-sales-channel-detail-theme', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder')\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'themeService',\n        'acl'\n    ],\n\n    props: {\n        salesChannel: {\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            theme: null,\n            showThemeSelectionModal: false,\n            showChangeModal: false,\n            newThemeId: null,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    watch: {\n        'salesChannel.extensions.themes': {\n            deep: true,\n            handler() {\n                if (!this.salesChannel || !this.salesChannel.extensions || this.salesChannel.extensions.themes.length < 1) {\n                    return;\n                }\n\n                this.theme = this.salesChannel.extensions.themes[0];\n\n                this.getTheme(this.theme.id);\n            }\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.salesChannel ||\n                !this.salesChannel.extensions ||\n                this.salesChannel.extensions.themes.length < 1) {\n                return;\n            }\n\n            this.theme = this.salesChannel.extensions.themes[0];\n            this.getTheme(this.theme.id);\n        },\n\n        getTheme(themeId) {\n            if (themeId === null) {\n                return;\n            }\n\n            const criteria = new Criteria();\n            criteria.addAssociation('previewMedia');\n\n            this.themeRepository.get(themeId, Shopware.Context.api, criteria).then((theme) => {\n                this.theme = theme;\n            });\n        },\n\n        openThemeModal() {\n            if (!this.acl.can('sales_channel.editor')) {\n                return;\n            }\n\n            this.showThemeSelectionModal = true;\n        },\n\n        closeThemeModal() {\n            this.showThemeSelectionModal = false;\n        },\n\n        openInThemeManager() {\n            if (!this.theme) {\n                this.$router.push({ name: 'sw.theme.manager.index' });\n            } else {\n                this.$router.push({ name: 'sw.theme.manager.detail', params: { id: this.theme.id } });\n            }\n        },\n\n        onChangeTheme(themeId) {\n            this.showThemeSelectionModal = false;\n\n            this.newThemeId = themeId;\n            this.showChangeModal = true;\n        },\n\n        onCloseChangeModal() {\n            this.showChangeModal = false;\n            this.newThemeId = null;\n        },\n\n        onConfirmChange() {\n            if (this.newThemeId) {\n                this.onThemeSelect(this.newThemeId);\n            }\n\n            this.showChangeModal = false;\n            this.newThemeId = null;\n        },\n\n        onThemeSelect(selectedThemeId) {\n            this.isLoading = true;\n            this.getTheme(selectedThemeId);\n            this.themeService.assignTheme(selectedThemeId, this.salesChannel.id).then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('sw-theme-manager.general.titleError'),\n                    message: this.$tc('sw-theme-manager.general.messageSaveError')\n                });\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"theme\"\n * @class\n * @extends ApiService\n */\nclass ThemeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'theme') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'themeService';\n    }\n\n    assignTheme(themeId, salesChannelId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/assign/${salesChannelId}`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {},\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateTheme(themeId, data, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            data,\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetTheme(themeId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/reset`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            {},\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getConfiguration(themeId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/configuration`;\n\n        const additionalHeaders = {\n            'sw-language-id': Shopware.State.get('session').languageId\n        };\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getStructuredFields(themeId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/structured-fields`;\n\n        const additionalHeaders = {\n            'sw-language-id': Shopware.State.get('session').languageId\n        };\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default ThemeApiService;\n","import ThemeService from '../core/service/api/theme.api.service';\n\nconst { Application } = Shopware;\n\nShopware.Service().register('themeService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new ThemeService(initContainer.httpClient, container.loginService);\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-settings-storefront-index.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"dfb0e0a4\", content, true, {});"],"sourceRoot":""}